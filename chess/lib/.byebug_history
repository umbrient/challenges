c
v
exit
validation
input
c
exit
input
1
exit
"1" == 1
(1..saves.length).to_a
1..saves.length.to_a
1..saves.length
saves.length.to_a
saves.length
exit
saves.index
saves
(1..saves.length).to_a
(1..saves.length).to_
(1..saves.length)
c
@board.checkmate?
exit
coords - risky
coords & risky
coords
risky
c
x
c
d1
c
n
b
@board.saviour_moves
c
coords
n
risky
coords
risky
c
skip
c
risky
c
board.checked(king).length
c
board.checked(king).length
n
c
board.checked(king).length
n
risky
board.checked(king).length
c
board.checked(king).length
c
board.checked(king).length
board.draw
n
(c)
risky
c
n
board.checked(king).length > 0
board.checked(king).length
board.checked(king)
board.draw
self
n
self
(c)
exit
c
self
coords
n
c
risky
coords
n
risky
n
c
@board.saviour_moves
c
d1
c
saviour_moves
move
buddy
c
exit
board.saviour_moves
coords
board.saviour_moves
c
coords
allowed_coords
coords
n
allowed_coords
n
board.saviour_moves
coords
n
c
g4
c
n
c
exit
allowed_coords[0].first
allowed_coords[0]
allowed_coords
n
board.saviour_moves
coords
c
exit
board.saviour_moves[:black].first.first.object_id
board.saviour_moves[:black].first.first
board.saviour_moves[:black].first
board.saviour_moves[:black]
board.saviour_moves.first
board.saviour_moves
coords
c
d1
exit
board.saviour_movesexit
board.saviour_moves
coords
c
n
allowed_coords
n
self
board.saviour_moves
coords
c
coords
coordds
coords
coords.reject! { |c| board.get_block(c).is_a?(Piece) && board.get_block(c).color == self.color  }
board.get_block([1,5]).color == self.color
board.get_block([1,5]).color
board.get_block([1,5]).is_a? Piece
board.get_block([1,5]).is_a Piece
board.get_block([1,5])
board
board.saviour_moves
coords
c
d1
exit
allowed_coords
coords
exit
board
self
board.saviour_moves
coords
c
d1
c
self
board.saviour_moves
self
allowed_coords
n
allowed_coords
board.saviour_moves
coords
c
d1
c
d1
c
g4
c
d1
exit
board.saviour_moves
n
board.saviour_moves
c
board.saviour_moves
strict
c
d1
exit
@board.saviour_moves
c
f2
c
d1
exit
@board.saviour_moves
@board.saviour_coords
@saviour_coords
coords
n
c
exit
@checked_coords
@board.saviour_moves
@board.saviour_coords
@board.saveable_coords
c
d2
c
d1
skip
c
self
c
self
c
self
c
cc
c
d1
c
coords
n
allowed_coords
n
allowed_coords.map(&:last)
allowedCoords
coords
exit
allowed_coords
n
allowed_coords
coords
exit
allowed_coords
coords
allowed_coords
allowed_coords. map {|a| a.first.name } 
allowed_coords
allowed_coords.sample.first.name == self.name
allowed_coords.sample.first.name != self.name
self.name
allowed_coords.sample.first.name
allowed_coords.sample.first
allowed_coords.sample
allowed_coords
coords
n
allowed_coords
